{%- if mixin_imports -%}
import abc
{% for mixin_import in mixin_imports %}
{{ mixin_import }}
{%- endfor -%}
{%- endif -%}
{%- if user_imports -%}
{{ user_imports }}
{%- elif mixin_imports %}
{{ '\n' }}
{% endif -%}
class {{ python_class_name.pascal_case }}
{%- if abstract_property_mixins -%}
    (
    # Property_mixins
    {%- for abstract_property in abstract_property_mixins %}
    With_{{ abstract_property.property_name.pascal_case }}_PropertyMixin_ABC,
    {%- endfor %}{% endif -%}
{%- if abstract_method_mixins  -%}
    (
    # Method_mixins
    {%- for abstract_method in abstract_method_mixins %}
    {{ abstract_method.method_name.pascal_case }}_MethodMixin_ABC,{% endfor -%}
{%- endif -%}
{%- if abstract_property_mixins or  abstract_method_mixins%}
    abc.ABC
){% endif %}:
    def _{{ method_name.snake_case }}(self{% if arguments %}, {{ arguments }}{% endif %}) -> {{ return_type }}:
{{ method_body }}